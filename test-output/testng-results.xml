<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-25T19:07:09 CET" name="Suite" finished-at="2022-01-25T19:07:18 CET" duration-ms="9873">
    <groups>
    </groups>
    <test started-at="2022-01-25T19:07:09 CET" name="App testing" finished-at="2022-01-25T19:07:09 CET" duration-ms="38">
      <class name="automationTest.AppTest">
        <test-method signature="shouldAnswerWithTrue()[pri:0, instance:automationTest.AppTest@5b69fd74]" started-at="2022-01-25T19:07:09 CET" name="shouldAnswerWithTrue" finished-at="2022-01-25T19:07:09 CET" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAnswerWithTrue -->
      </class> <!-- automationTest.AppTest -->
    </test> <!-- App testing -->
    <test started-at="2022-01-25T19:07:09 CET" name="Validating navigation bar" finished-at="2022-01-25T19:07:15 CET" duration-ms="6618">
      <class name="automationTest.ValidateNavigationBar">
        <test-method is-config="true" signature="initial()[pri:0, instance:automationTest.ValidateNavigationBar@6bd51ed8]" started-at="2022-01-25T19:07:09 CET" name="initial" finished-at="2022-01-25T19:07:12 CET" duration-ms="3052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initial -->
        <test-method signature="getNavigationBar()[pri:0, instance:automationTest.ValidateNavigationBar@6bd51ed8]" started-at="2022-01-25T19:07:12 CET" name="getNavigationBar" finished-at="2022-01-25T19:07:15 CET" duration-ms="3272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNavigationBar -->
        <test-method signature="validateLogo()[pri:0, instance:automationTest.ValidateNavigationBar@6bd51ed8]" started-at="2022-01-25T19:07:15 CET" name="validateLogo" finished-at="2022-01-25T19:07:15 CET" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogo -->
        <test-method is-config="true" signature="close()[pri:0, instance:automationTest.ValidateNavigationBar@6bd51ed8]" started-at="2022-01-25T19:07:15 CET" name="close" finished-at="2022-01-25T19:07:15 CET" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- automationTest.ValidateNavigationBar -->
    </test> <!-- Validating navigation bar -->
    <test started-at="2022-01-25T19:07:09 CET" name="Validating user login" finished-at="2022-01-25T19:07:18 CET" duration-ms="9634">
      <class name="automationTest.HomePage">
        <test-method is-config="true" signature="initial()[pri:0, instance:automationTest.HomePage@1c05a54d]" started-at="2022-01-25T19:07:09 CET" name="initial" finished-at="2022-01-25T19:07:12 CET" duration-ms="3074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initial -->
        <test-method signature="basePageNavigation(java.lang.String,java.lang.String)[pri:0, instance:automationTest.HomePage@1c05a54d]" started-at="2022-01-25T19:07:12 CET" name="basePageNavigation" data-provider="getData" finished-at="2022-01-25T19:07:16 CET" duration-ms="4740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahn123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String,java.lang.String)[pri:0, instance:automationTest.HomePage@1c05a54d]" started-at="2022-01-25T19:07:16 CET" name="basePageNavigation" data-provider="getData" finished-at="2022-01-25T19:07:18 CET" duration-ms="1672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fasal234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4567890e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="close()[pri:0, instance:automationTest.HomePage@1c05a54d]" started-at="2022-01-25T19:07:18 CET" name="close" finished-at="2022-01-25T19:07:18 CET" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- automationTest.HomePage -->
    </test> <!-- Validating user login -->
    <test started-at="2022-01-25T19:07:09 CET" name="Validating title in the page" finished-at="2022-01-25T19:07:18 CET" duration-ms="9873">
      <class name="automationTest.ValidateTitle">
        <test-method is-config="true" signature="initial()[pri:0, instance:automationTest.ValidateTitle@6058e535]" started-at="2022-01-25T19:07:09 CET" name="initial" finished-at="2022-01-25T19:07:12 CET" duration-ms="3052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initial -->
        <test-method signature="getTitle()[pri:0, instance:automationTest.ValidateTitle@6058e535]" started-at="2022-01-25T19:07:12 CET" name="getTitle" finished-at="2022-01-25T19:07:17 CET" duration-ms="5582" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [The Sales Hub by Salesforce123] but found [The Sales Hub by Salesforce]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [The Sales Hub by Salesforce123] but found [The Sales Hub by Salesforce]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at automationTest.ValidateTitle.getTitle(ValidateTitle.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method is-config="true" signature="close()[pri:0, instance:automationTest.ValidateTitle@6058e535]" started-at="2022-01-25T19:07:18 CET" name="close" finished-at="2022-01-25T19:07:18 CET" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- automationTest.ValidateTitle -->
    </test> <!-- Validating title in the page -->
  </suite> <!-- Suite -->
</testng-results>
